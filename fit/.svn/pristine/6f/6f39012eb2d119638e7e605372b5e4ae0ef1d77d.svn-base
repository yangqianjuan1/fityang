<template>
    <div class="page">
        <times :show="false" />
        <div class="area">
            <div class="news-left-block"></div>
            <div class="news-title">
                <p>{{name}} - 详情页面</p>
            </div>
            <div class="clear"></div>
            <div class="area">
                <el-row :gutter="20">
                    <el-col :span="3">
                        <el-date-picker
                            size="mini"
                            v-model="formInline.year"
                            type="year"
                            placeholder="选择年"
                        ></el-date-picker>
                    </el-col>
                    <el-col :span="3">
                        <el-select size="mini" v-model="formInline.month" placeholder="选择月">
                            <el-option
                                v-for="item in options_m"
                                :key="item.value"
                                :label="item.label"
                                :value="item.value"
                            ></el-option>
                        </el-select>
                    </el-col>
                    <el-col :span="3">
                        <el-select size="mini" v-model="formInline.day" placeholder="选择日">
                            <el-option
                                v-for="item in options"
                                :key="item.value"
                                :label="item.label"
                                :value="item.value"
                            ></el-option>
                        </el-select>
                    </el-col>
                    <el-col :span="3">
                        <el-button size="mini" @click="getInfo()" type="primary">检索</el-button>
                    </el-col>
                </el-row>

                <el-row>
                    <el-col :span="12">
                        <div class="chart_wrap" id="zdliangs" ref="zdliangs"></div>
                    </el-col>
                    <el-col :span="12">
                        <div class="chart_wrap" id="yddliangs" ref="yddliangs"></div>
                    </el-col>
                </el-row>
                <el-row>
                    <el-col :span="12">
                        <div class="chart_wrap" id="ltdliangs" ref="ltdliangs"></div>
                    </el-col>
                    <el-col :span="12">
                        <div class="chart_wrap" id="dxdliangs" ref="dxdliangs"></div>
                    </el-col>
                </el-row>
                <div class="tablewap">
                    <el-table :data="tableData" style="width: 100%" border height="400px">
                        <el-table-column prop="time" label="时间节点" align="center"></el-table-column>
                        <el-table-column prop="zl" label="总量 （kw·h）" align="center"></el-table-column>
                        <el-table-column prop="yd" label="移动 （kw·h）" align="center"></el-table-column>
                        <el-table-column prop="lt" label="联通 （kw·h）" align="center"></el-table-column>
                        <el-table-column prop="dx" label="电信 （kw·h）" align="center"></el-table-column>
                    </el-table>
                </div>
            </div>
        </div>
    </div>
</template>

<script>
import times from "../../../components/tableTime";
export default {
    data() {
        return {
            formInline: {
                year: "",
                month: "",
                day: ""
            },
            name: "",
            options: [],
            options_m: [],
            tableData: []
        };
    },
    components: {
        times
    },
    created() {
        let arr2 = [];
        for (let i = 0; i < 32; i++) {
            let one = {
                label: i == 0 ? "无限制" : this.add0(i),
                value: i == 0 ? "" : this.add0(i)
            };
            arr2.push(one);
        }
        this.options = arr2;
        let arr2_m = [];
        for (let y = 0; y < 13; y++) {
            let one = {
                label: y == 0 ? "无限制" : this.add0(y),
                value: y == 0 ? "" : this.add0(y)
            };
            arr2_m.push(one);
        }
        this.options_m = arr2_m;
    },

    mounted() {
        let date = new Date();
        this.formInline.year = date.getFullYear() + "";
        this.getInfo();
    },
    methods: {
        add0(str) {
            return str >= 10 ? str : "0" + str;
        },
        getInfo() {
            let vm = this;
            if (!vm.formInline.year) {
                alert("请选择年份");
                return;
            }
            if (vm.formInline.day) {
                var time = `${vm.formInline.year}-${vm.formInline.month}-${vm.formInline.day}`;
                var type = "day";
            } else if (!vm.formInline.day && vm.formInline.month) {
                var time = `${vm.formInline.year}-${vm.formInline.month}`;
                var type = "month";
            } else {
                var time = `${vm.formInline.year}`;
                var type = "year";
            }
            let info = {
                devops: vm.$route.query.id,
                mode: type,
                time: time
            };
            vm.tableApi.fljl_zdxq(info).then(res => {
                console.log(res);
                vm.name = res.result.panelName;

                vm.drawChartLine(
                    "zdliangs",
                    "总量",
                    "red",
                    res.result.zdliangs,
                    res.result.xsjs
                );
                vm.drawChartLine(
                    "yddliangs",
                    "移动",
                    "#8fc320",
                    res.result.yddliangs,
                    res.result.xsjs
                );
                vm.drawChartLine(
                    "ltdliangs",
                    "联通",
                    "#e67817",
                    res.result.ltdliangs,
                    res.result.xsjs
                );
                vm.drawChartLine(
                    "dxdliangs",
                    "电信",
                    "#007cbd",
                    res.result.dxdliangs,
                    res.result.xsjs
                );
                let data = res.result;
                let arr = [];

                for (let i = 0; i < data.xsjs.length; i++) {
                    let one = {
                        time: data.xsjs[i],
                        zl: data.zdliangs[i],
                        yd: data.yddliangs[i],
                        lt: data.ltdliangs[i],
                        dx: data.dxdliangs[i]
                    };

                    arr.push(one);
                }
                vm.tableData = arr;
            });
        },
        drawChartLine(id, name, color, data, xname) {
            let vm = this;
            const charts = this.$echarts.init(this.$refs[id]);
            charts.setOption({
                title: {
                    text: name,
                    textStyle: {
                        color: color,
                        fontSize: "18",
                        borderLeft: "10"
                    },
                    borderWidth: [1, 2, 3, 4],
                    borderColor: "#0070C9",
                    // textAlign:{default:'center'},
                    // top:'10',
                    left: "30"
                },
                color: [color],
                legend: {
                    width: {
                        default: "1"
                    },
                    height: {
                        default: "200"
                    }
                },
                height: 100,
                top: "top",
                tooltip: {
                    trigger: "axis",
                    axisPointer: {
                        type: "shadow"
                    }
                },
                xAxis: {
                    data: xname,
                    axisLine: {
                        lineStyle: {
                            width: 1
                        }
                    }
                },

                grid: [
                    {
                        left: "15%",
                        height: "60%"
                    }
                ],

                yAxis: {
                    axisLine: {
                        lineStyle: {
                            width: 1
                        }
                    },
                    axisLabel: {
                        formatter: "{value} kw/h"
                    }
                },
                legend: {
                    data: ["电量"]
                },
                series: [
                    {
                        name: "电量",
                        type: "line",
                        data: data,
                        smooth: true
                    }
                ]
            });
            window.addEventListener("resize", function() {
                charts.resize();
            });
        }
    }
};
</script>

<style scoped lang='scss'>
.tablewap {
    width: 60%;
    margin: 0 auto;
}
.chart_wrap {
    width: 100%;
    height: 370px;
    margin-top: 40px;
}
.wrap {
    padding-top: 15px;
}
.news-left-block {
    float: left;
    width: 6px;
    height: 16px;
    background: #0070c9;
    margin-left: 16px;
    margin-top: 20px;
}
.area {
    background: #fff;
    padding: 10px;
    margin-bottom: 20px;
}
.page {
    padding-top: 0.7%;
    width: 1280px;
    min-height: 700px;
    margin: 0 auto;
}
.news-title {
    float: left;
    width: calc(100% - 0.7% - 0.7% - 6px - 16px);
    margin-left: 0.7%;
    margin-right: 0.7%;
    border-bottom: 1px solid #e4ebf0;
    p {
        cursor: default;
        float: left;
        font-size: 16px;
        color: #0070c9;
        margin-top: 17px;
        margin-bottom: 13px;
        font-weight: bold;
    }
}
</style>
<style scoped>
.page >>> .el-input {
    width: 100%;
}
</style>


