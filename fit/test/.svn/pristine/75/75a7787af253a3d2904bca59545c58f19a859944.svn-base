'use strict'
const path = require('path')
const utils = require('./utils')
const config = require('../config')
const vueLoaderConfig = require('./vue-loader.conf')
const SpritesPlugin = require('webpack-spritesmith');
function resolve (dir) {
  return path.join(__dirname, '..', dir)
}



module.exports = {
  context: path.resolve(__dirname, '../'),
  entry: {
    app: ['babel-polyfill', './src/main.js']
  },
  output: {
    path: config.build.assetsRoot,
    filename: '[name].js',
    publicPath: process.env.NODE_ENV === 'production'
      ? config.build.assetsPublicPath
      : config.dev.assetsPublicPath
  },
  resolve: {
    extensions: ['.js', '.vue', '.json'],
    alias: {
      'vue$': 'vue/dist/vue.esm.js',
      '@': resolve('src'),
    }
  },
  module: {
    rules: [
      {
        test: /\.vue$/,
        loader: 'vue-loader',
        options: vueLoaderConfig
      },
      {
        test: /\.js$/,
        loader: 'babel-loader',
        include: [resolve('src'), resolve('test'), resolve('node_modules/webpack-dev-server/client')]
      },
      {
        test: /\.(png|jpe?g|gif|svg)(\?.*)?$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
          name: utils.assetsPath('img/[name].[hash:7].[ext]')
        }
      },
      {
        test: /\.(mp4|webm|ogg|mp3|wav|flac|aac)(\?.*)?$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
          name: utils.assetsPath('media/[name].[hash:7].[ext]')
        }
      },
      {
        test: /\.(woff2?|eot|ttf|otf)(\?.*)?$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
          name: utils.assetsPath('fonts/[name].[hash:7].[ext]')
        }
      }
    ]
  },
  node: {
    // prevent webpack from injecting useless setImmediate polyfill because Vue
    // source contains it (although only uses it if it's native).
    setImmediate: false,
    // prevent webpack from injecting mocks to Node native modules
    // that does not make sense for the client
    dgram: 'empty',
    fs: 'empty',
    net: 'empty',
    tls: 'empty',
    child_process: 'empty'
  },
  externals: {
    vue: 'Vue',
    // 'element-ui':'ELEMENT',
  },
  plugins: [
    // 雪碧图相关
    // new SpritesPlugin({
    //   // 目标小图标
    //   src: {
    //     cwd: path.resolve(__dirname, '../static/tiger/body'),
    //     glob: '*.png'
    //   },
    //   // 输出雪碧图文件及样式文件
    //   target: {
    //     image: path.resolve(__dirname, '../src/assets/css/body-sprite.png'),
    //     css:[[path.resolve(__dirname, '../src/assets/css/sprite.css')]]
    //   },
    //   spritesmithOptions: {
    //     algorithm: 'left-right'//设置图标的排列方式
    //   }
    //   // 样式文件中调用雪碧图地址写法
    //
    // }),
    // new SpritesPlugin({
    //   // 目标小图标
    //   src: {
    //     cwd: path.resolve(__dirname, '../static/tiger/foot'),
    //     glob: '*.png'
    //   },
    //   // 输出雪碧图文件及样式文件
    //   target: {
    //     image: path.resolve(__dirname, '../src/assets/css/foot-sprite.png'),
    //     css:[[path.resolve(__dirname, '../src/assets/css/sprite.css')]]
    //   },
    //   spritesmithOptions: {
    //     algorithm: 'left-right'//设置图标的排列方式
    //   }
    //   // 样式文件中调用雪碧图地址写法
    //
    // }),
    // new SpritesPlugin({
    //   // 目标小图标
    //   src: {
    //     cwd: path.resolve(__dirname, '../static/tiger/hat'),
    //     glob: '*.png'
    //   },
    //   // 输出雪碧图文件及样式文件
    //   target: {
    //     image: path.resolve(__dirname, '../src/assets/css/hat-sprite.png'),
    //     css:[[path.resolve(__dirname, '../src/assets/css/sprite.css')]]
    //   },
    //   spritesmithOptions: {
    //     algorithm: 'left-right'//设置图标的排列方式
    //   }
    //   // 样式文件中调用雪碧图地址写法
    //
    // }),
    // new SpritesPlugin({
    //   // 目标小图标
    //   src: {
    //     cwd: path.resolve(__dirname, '../static/tiger/horn'),
    //     glob: '*.png'
    //   },
    //   // 输出雪碧图文件及样式文件
    //   target: {
    //     image: path.resolve(__dirname, '../src/assets/css/horn-sprite.png'),
    //     css:[[path.resolve(__dirname, '../src/assets/css/sprite.css')]]
    //   },
    //   spritesmithOptions: {
    //     algorithm: 'left-right'//设置图标的排列方式
    //   }
    //   // 样式文件中调用雪碧图地址写法
    //
    // }),
    // new SpritesPlugin({
    //   // 目标小图标
    //   src: {
    //     cwd: path.resolve(__dirname, '../static/tiger/pendant'),
    //     glob: '*.png'
    //   },
    //   // 输出雪碧图文件及样式文件
    //   target: {
    //     image: path.resolve(__dirname, '../src/assets/css/pendant-sprite.png'),
    //     css:[[path.resolve(__dirname, '../src/assets/css/sprite.css')]]
    //   },
    //   spritesmithOptions: {
    //     algorithm: 'left-right'//设置图标的排列方式
    //   }
    //   // 样式文件中调用雪碧图地址写法
    //
    // }),
    // new SpritesPlugin({
    //   // 目标小图标
    //   src: {
    //     cwd: path.resolve(__dirname, '../static/tiger/saddle'),
    //     glob: '*.png'
    //   },
    //   // 输出雪碧图文件及样式文件
    //   target: {
    //     image: path.resolve(__dirname, '../src/assets/css/saddle-sprite.png'),
    //     css:[[path.resolve(__dirname, '../src/assets/css/sprite.css')]]
    //   },
    //   spritesmithOptions: {
    //     algorithm: 'left-right'//设置图标的排列方式
    //   }
    //   // 样式文件中调用雪碧图地址写法
    //
    // }),
    // new SpritesPlugin({
    //   // 目标小图标
    //   src: {
    //     cwd: path.resolve(__dirname, '../static/tiger/wing-left'),
    //     glob: '*.png'
    //   },
    //   // 输出雪碧图文件及样式文件
    //   target: {
    //     image: path.resolve(__dirname, '../src/assets/css/wing-left-sprite.png'),
    //     css:[[path.resolve(__dirname, '../src/assets/css/sprite.css')]]
    //   },
    //   spritesmithOptions: {
    //     algorithm: 'left-right'//设置图标的排列方式
    //   }
    //   // 样式文件中调用雪碧图地址写法
    //
    // }),
    // new SpritesPlugin({
    //   // 目标小图标
    //   src: {
    //     cwd: path.resolve(__dirname, '../static/tiger/wing-right'),
    //     glob: '*.png'
    //   },
    //   // 输出雪碧图文件及样式文件
    //   target: {
    //     image: path.resolve(__dirname, '../src/assets/css/wing-right-sprite.png'),
    //     css:[[path.resolve(__dirname, '../src/assets/css/sprite.css')]]
    //   },
    //   spritesmithOptions: {
    //     algorithm: 'left-right'//设置图标的排列方式
    //   }
    //   // 样式文件中调用雪碧图地址写法
    //
    // }),
  ]
}
